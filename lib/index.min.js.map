{"version":3,"file":"index.min.js","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/typeof.js","../src/common/checkOptions.js","../src/common/getContracts.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../src/common/constants.js","../src/common/checkAccount.js","../src/safe.js","../src/common/parameterize.js","../src/common/rpc.js","../src/common/typedData.js","../src/utils.js","../src/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","const DEFAULT_TYPE = 'string';\n\nconst validators = {\n  number: value => {\n    return typeof value === 'number';\n  },\n  string: value => {\n    return typeof value === 'string';\n  },\n  object: value => {\n    return typeof value === 'object';\n  },\n  array: value => {\n    return Array.isArray(value);\n  },\n};\n\n/**\n * Check for required option fields, validate them and use fallback\n * value when default is given.\n *\n * @param {Object} options - given user options\n * @param {Object} fields - defined option types and default values\n *\n * @return {Object} - cleaned options\n */\nexport default function checkOptions(options, fields) {\n  if (!options || typeof options !== 'object') {\n    throw new Error('Options missing');\n  }\n\n  return Object.keys(fields).reduce((acc, key) => {\n    const type =\n      fields[key] && 'type' in fields[key] && fields[key].type in validators\n        ? fields[key].type\n        : DEFAULT_TYPE;\n\n    const validatorFn = typeof type === 'function' ? type : validators[type];\n\n    const defaultValue =\n      fields[key] && 'default' in fields[key] ? fields[key].default : null;\n\n    if (defaultValue !== null && !validatorFn(defaultValue)) {\n      throw new Error(`Field \"${key}\" has invalid default type`);\n    }\n\n    if (!(key in options) || !options[key]) {\n      if (defaultValue === null) {\n        throw new Error(`\"${key}\" is missing in options`);\n      }\n\n      acc[key] = defaultValue;\n    } else if (validatorFn(options[key])) {\n      acc[key] = options[key];\n    } else {\n      throw new Error(`\"${key}\" has invalid type`);\n    }\n\n    return acc;\n  }, {});\n}\n","import GnosisSafeContract from '@gnosis.pm/safe-contracts/build/contracts/GnosisSafe.json';\nimport HubContract from 'circles-contracts/build/contracts/Hub.json';\nimport ProxyFactoryContract from '@gnosis.pm/safe-contracts/build/contracts/ProxyFactory.json';\nimport TokenContract from 'circles-contracts/build/contracts/Token.json';\n\n/**\n * Helper method to get a deployed smart contract instance.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} abi - contract abi\n * @param {Object} address - contract address\n *\n * @return {Object} - contract instance\n */\nfunction getContract(web3, abi, address) {\n  return new web3.eth.Contract(abi, address);\n}\n\n/**\n * Returns deployed Gnosis Safe smart contract instance.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} address - contract address\n *\n * @return {Object} - contract instance\n */\nexport function getSafeContract(web3, address) {\n  return getContract(web3, GnosisSafeContract.abi, address);\n}\n\n/**\n * Returns deployed Circles Token smart contract instance.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} address - contract address\n *\n * @return {Object} - contract instance\n */\nexport function getTokenContract(web3, address) {\n  return getContract(web3, TokenContract.abi, address);\n}\n\n/**\n * Helper method to get all required deployed contract instances.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} options - contract addresses\n *\n * @return {Object} - contract instances\n */\nexport default function getContracts(web3, options) {\n  const { safeMasterAddress, proxyFactoryAddress, hubAddress } = options;\n\n  // Gnosis master Safe copy\n  const safeMaster = getSafeContract(web3, safeMasterAddress);\n\n  // Gnosis ProxyFactory\n  const proxyFactory = getContract(\n    web3,\n    ProxyFactoryContract.abi,\n    proxyFactoryAddress,\n  );\n\n  // Circles Hub\n  const hub = getContract(web3, HubContract.abi, hubAddress);\n\n  return {\n    hub,\n    proxyFactory,\n    safeMaster,\n  };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","// Gnosis Safe operation types\nexport const CALL_OP = 0;\n\n// Gnosis Safe owner threshold\nexport const SAFE_THRESHOLD = 1;\n\n// Gnosis Safe owner linked list addresses\nexport const SENTINEL_ADDRESS = '0x0000000000000000000000000000000000000001';\n\n// Common addresses\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\n","import checkOptions from '~/common/checkOptions';\n\n/**\n * Convenience wrapper function around checkOptions to check\n * for a valid web3 account.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} account - web3 account instance\n *\n * @return {Object} - cleaned options\n */\nexport default function checkAccount(web3, account) {\n  return checkOptions(account, {\n    address: web3.utils.isAddress,\n    privateKey: web3.utils.isHexStrict,\n  });\n}\n","import { SAFE_THRESHOLD, SENTINEL_ADDRESS } from '~/common/constants';\n\nimport checkAccount from '~/common/checkAccount';\nimport checkOptions from '~/common/checkOptions';\nimport { getSafeContract } from '~/common/getContracts';\n\n/**\n * Helper method to receive a list of all Gnosis Safe owners.\n *\n * @param {Web3} web3 - web3 instance\n * @param {string} address\n *\n * @return {string[]} - array of owner addresses\n */\nasync function getOwners(web3, address) {\n  // Get Safe at given address\n  const safe = getSafeContract(web3, address);\n\n  // Call 'getOwners' method and return list of owners\n  return await safe.methods.getOwners().call();\n}\n\n/**\n * Safe submodule to deploy and interact with the Gnosis Safe.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} contracts - common contract instances\n * @param {Object} utils - utils module instance\n *\n * @return {Object} - safe module instance\n */\nexport default function createSafeModule(web3, contracts, utils) {\n  return {\n    /**\n     * Register a to-be-created Safe in the Relayer and receive\n     * a predicted Safe address.\n     *\n     * @param {Object} account - web3 account instance\n     * @param {Object} userOptions - options\n     * @param {number} userOptions.nonce - nonce to predict address\n     *\n     * @return {string} - Predicted Gnosis Safe address\n     */\n    prepareDeploy: async (account, userOptions) => {\n      checkAccount(web3, account);\n\n      const options = checkOptions(userOptions, {\n        nonce: {\n          type: 'number',\n        },\n      });\n\n      const response = await utils.requestRelayer({\n        path: ['safes'],\n        version: 2,\n        method: 'POST',\n        data: {\n          saltNonce: options.nonce,\n          owners: [account.address],\n          threshold: SAFE_THRESHOLD,\n        },\n      });\n\n      return response.safe;\n    },\n\n    /**\n     * Requests the relayer to not wait for the Safe deployment task.\n     * This might still fail when the Safe is not funded or does not\n     * have enough trust connections yet.\n     *\n     * @param {Object} account - web3 account instance\n     * @param {Object} userOptions - options\n     * @param {number} userOptions.address - to-be-deployed Safe address\n     *\n     * @return {boolean} - returns true when successful\n     */\n    forceDeploy: async (account, userOptions) => {\n      checkAccount(web3, account);\n\n      const options = checkOptions(userOptions, {\n        address: {\n          type: web3.utils.isAddress,\n        },\n      });\n\n      await utils.requestRelayer({\n        path: ['safes', options.address, 'funded'],\n        version: 2,\n        method: 'PUT',\n      });\n\n      return true;\n    },\n    /**\n     * Returns a list of all owners of the given Gnosis Safe.\n     *\n     * @param {Object} account - web3 account instance\n     * @param {Object} userOptions - options\n     * @param {number} userOptions.address - address of the Gnosis Safe\n     *\n     * @return {string[]} - array of owner addresses\n     */\n    getOwners: async (account, userOptions) => {\n      checkAccount(web3, account);\n\n      const options = checkOptions(userOptions, {\n        address: {\n          type: web3.utils.isAddress,\n        },\n      });\n\n      return getOwners(web3, options.address);\n    },\n\n    /**\n     * Add an address as an owner of a given Gnosis Safe.\n     *\n     * @param {Object} account - web3 account instance\n     * @param {Object} userOptions - options\n     * @param {number} userOptions.address - address of the Gnosis Safe\n     * @param {number} userOptions.owner - owner address to be added\n     */\n    addOwner: async (account, userOptions) => {\n      checkAccount(web3, account);\n\n      const options = checkOptions(userOptions, {\n        address: {\n          type: web3.utils.isAddress,\n        },\n        owner: {\n          type: web3.utils.isAddress,\n        },\n      });\n\n      // Get Safe at given address\n      const safe = getSafeContract(web3, options.address);\n\n      // Prepare 'addOwnerWithThreshold' method\n      const txData = safe.methods\n        .addOwnerWithThreshold(options.owner, SAFE_THRESHOLD)\n        .encodeABI();\n\n      // Call method and return result\n      return await utils.executeSafeTx(account, {\n        safeAddress: options.address,\n        to: options.address,\n        txData,\n      });\n    },\n\n    /**\n     * Remove owner of a given Gnosis Safe.\n     *\n     * @param {Object} account - web3 account instance\n     * @param {Object} userOptions - options\n     * @param {number} userOptions.address - address of the Gnosis Safe\n     * @param {number} userOptions.owner - owner address to be removed\n     */\n    removeOwner: async (account, userOptions) => {\n      checkAccount(web3, account);\n\n      const options = checkOptions(userOptions, {\n        address: {\n          type: web3.utils.isAddress,\n        },\n        owner: {\n          type: web3.utils.isAddress,\n        },\n      });\n\n      // Get Safe at given address\n      const safe = getSafeContract(web3, options.address);\n\n      // We need the list of owners before ...\n      const owners = await getOwners(web3, options.address);\n\n      // .. to find out which previous owner in the list is pointing at the one we want to remove\n      const ownerIndex = owners.findIndex(owner => owner === options.owner);\n      const prevOwner =\n        ownerIndex > 0 ? owners[ownerIndex - 1] : SENTINEL_ADDRESS;\n\n      // Prepare 'removeOwner' method by passing pointing owner and the owner to be removed\n      const txData = await safe.methods\n        .removeOwner(prevOwner, options.owner, SAFE_THRESHOLD)\n        .encodeABI();\n\n      // Call method and return result\n      return await utils.executeSafeTx(account, {\n        safeAddress: options.address,\n        to: options.address,\n        txData,\n      });\n    },\n  };\n}\n","function encode(str) {\n  return encodeURIComponent(str);\n}\n\nexport default function parameterize(obj) {\n  if (Object.keys(obj).length === 0) {\n    return '';\n  }\n\n  return (\n    '?' +\n    Object.keys(obj)\n      .map(key => {\n        if (Array.isArray(obj[key])) {\n          return obj[key]\n            .map(item => {\n              return `${encode(key)}[]=${encode(item)}`;\n            })\n            .join('&');\n        }\n\n        return `${encode(key)}=${encode(obj[key])}`;\n      })\n      .join('&')\n  );\n}\n","/**\n * Make an RPC call to the blockchain.\n *\n * @param {Web3} web3 - web3 instance\n * @param {string} method - RPC method name\n * @param {any[]} params - RPC params\n *\n * @return {Object} - JSON RPC result\n */\nexport async function requestRPC(web3, method, params = []) {\n  return new Promise((resolve, reject) => {\n    web3.currentProvider.send(\n      {\n        jsonrpc: '2.0',\n        id: new Date().getTime(),\n        method,\n        params,\n      },\n      (error, { result }) => {\n        if (error) {\n          return reject(error);\n        }\n\n        return resolve(result);\n      },\n    );\n  });\n}\n","import { requestRPC } from '~/common/rpc';\n\n/**\n * Format transaction hash data for signing.\n */\nexport function formatTypedData(\n  to,\n  value,\n  data,\n  operation,\n  safeTxGas,\n  dataGas,\n  gasPrice,\n  gasToken,\n  refundReceiver,\n  nonce,\n  verifyingContract,\n) {\n  return {\n    types: {\n      EIP712Domain: [{ type: 'address', name: 'verifyingContract' }],\n      SafeTx: [\n        { type: 'address', name: 'to' },\n        { type: 'uint256', name: 'value' },\n        { type: 'bytes', name: 'data' },\n        { type: 'uint8', name: 'operation' },\n        { type: 'uint256', name: 'safeTxGas' },\n        { type: 'uint256', name: 'baseGas' },\n        { type: 'uint256', name: 'gasPrice' },\n        { type: 'address', name: 'gasToken' },\n        { type: 'address', name: 'refundReceiver' },\n        { type: 'uint256', name: 'nonce' },\n      ],\n    },\n    domain: {\n      verifyingContract,\n    },\n    primaryType: 'SafeTx',\n    message: {\n      to,\n      value,\n      data,\n      operation,\n      safeTxGas,\n      baseGas: dataGas,\n      gasPrice,\n      gasToken,\n      refundReceiver,\n      nonce,\n    },\n  };\n}\n\n/**\n * Sign transaction for the relayer.\n */\nexport async function signTypedData(web3, address, typedData) {\n  return await requestRPC(web3, 'eth_signTypedData', [address, typedData]);\n}\n","import fetch from 'isomorphic-fetch';\n\nimport { CALL_OP, ZERO_ADDRESS } from '~/common/constants';\n\nimport checkAccount from '~/common/checkAccount';\nimport checkOptions from '~/common/checkOptions';\nimport parameterize from '~/common/parameterize';\nimport { formatTypedData, signTypedData } from '~/common/typedData';\nimport { getSafeContract } from '~/common/getContracts';\n\nasync function requestRelayer(endpoint, userOptions) {\n  const options = checkOptions(userOptions, {\n    path: {\n      type: 'array',\n    },\n    version: {\n      type: 'number',\n      default: 1,\n    },\n    method: {\n      type: 'string',\n      default: 'GET',\n    },\n    data: {\n      type: 'object',\n      default: {},\n    },\n  });\n\n  const { path, method, data, version } = options;\n\n  const request = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  let paramsStr = '';\n  if (method === 'GET') {\n    paramsStr = parameterize(data);\n  } else {\n    request.body = JSON.stringify(data);\n  }\n\n  const url = `${endpoint}/api/v${version}/${path.join('/')}/${paramsStr}`;\n\n  try {\n    return fetch(url, request).then(response => {\n      if (response.status >= 400) {\n        throw new Error(`Relayer responded with error ${response.status}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n\n      if (contentType && contentType.includes('application/json')) {\n        return response.json().then(json => {\n          return json;\n        });\n      } else {\n        return response;\n      }\n    });\n  } catch (err) {\n    throw new Error(err);\n  }\n}\n\nasync function estimateTransactionCosts(\n  endpoint,\n  {\n    safeAddress,\n    to,\n    txData,\n    value = 0,\n    gasToken = ZERO_ADDRESS,\n    operation = CALL_OP,\n  },\n) {\n  return await requestRelayer(endpoint, {\n    path: ['safes', safeAddress, 'transactions', 'estimate'],\n    method: 'POST',\n    version: 2,\n    data: {\n      safe: safeAddress,\n      data: txData,\n      to,\n      value,\n      operation,\n      gasToken,\n    },\n  });\n}\n\n/**\n * Utils submodule for common transaction and relayer methods.\n *\n * @param {Web3} web3 - Web3 instance\n * @param {Object} contracts - common contract instances\n * @param {Object} globalOptions - global core options\n *\n * @return {Object} - utils module instance\n */\nexport default function createUtilsModule(web3, contracts, globalOptions) {\n  const { relayServiceEndpoint } = globalOptions;\n\n  return {\n    /**\n     * Send an API request to the Gnosis Relayer.\n     *\n     * @param {string} relayServiceEndpoint - relayer endpoint URL\n     * @param {Object} userOptions - global core options\n     * @param {string[]} userOptions.path - API path as array\n     * @param {number} userOptions.version - API version 1 or 2\n     * @param {string} userOptions.method - API request method (GET, POST)\n     * @param {Object} userOptions.data - data payload\n     */\n    requestRelayer: async userOptions => {\n      return requestRelayer(relayServiceEndpoint, userOptions);\n    },\n\n    /**\n     * Send a transaction to the relayer which will be executed by it.\n     * The gas costs will be estimated by the relayer before.\n     *\n     * @param {Object} account - web3 account instance\n     * @param {string} userOptions.safeAddress - address of Safe\n     * @param {string} userOptions.to - forwarded address (from is the relayer)\n     * @param {object} userOptions.txData - encoded transaction data\n     * @param {number} userOptions.value - value in Wei\n     */\n    executeSafeTx: async (account, userOptions) => {\n      checkAccount(web3, account);\n\n      const options = checkOptions(userOptions, {\n        safeAddress: {\n          type: web3.utils.isAddress,\n        },\n        to: {\n          type: web3.utils.isAddress,\n        },\n        txData: {\n          type: web3.utils.isHexStrict,\n          default: '0x',\n        },\n        value: {\n          type: 'number',\n          default: 0,\n        },\n      });\n\n      const { to, txData, value, safeAddress } = options;\n      const operation = CALL_OP;\n      const gasToken = ZERO_ADDRESS;\n      const refundReceiver = ZERO_ADDRESS;\n\n      const { dataGas, safeTxGas, gasPrice } = await estimateTransactionCosts(\n        relayServiceEndpoint,\n        {\n          gasToken,\n          operation,\n          safeAddress,\n          to,\n          txData,\n          value,\n        },\n      );\n\n      const nonce = await getSafeContract(web3, safeAddress)\n        .methods.nonce()\n        .call();\n\n      const typedData = formatTypedData(\n        to,\n        value,\n        txData,\n        operation,\n        safeTxGas,\n        dataGas,\n        gasPrice,\n        gasToken,\n        refundReceiver,\n        nonce,\n        safeAddress,\n      );\n\n      const signatureBytes = await signTypedData(\n        web3,\n        account.address,\n        typedData,\n      );\n\n      const sig = signatureBytes.slice(2);\n\n      const signature = {\n        r: web3.utils.toBN(`0x${sig.slice(0, 64)}`).toString(10),\n        s: web3.utils.toBN(`0x${sig.slice(64, 128)}`).toString(10),\n        v: web3.utils.toDecimal(sig.slice(128, 130)),\n      };\n\n      return requestRelayer(relayServiceEndpoint, {\n        path: ['safes', safeAddress, 'transactions'],\n        method: 'POST',\n        version: 1,\n        data: {\n          to,\n          value,\n          data: txData,\n          operation,\n          signatures: [signature],\n          safeTxGas,\n          dataGas,\n          gasPrice,\n          nonce,\n          gasToken,\n        },\n      });\n    },\n  };\n}\n","import checkOptions from '~/common/checkOptions';\nimport getContracts from '~/common/getContracts';\n\nimport createSafeModule from '~/safe';\nimport createUtilsModule from '~/utils';\n\n/**\n * Base class of CirclesCore.\n */\nexport default class CirclesCore {\n  /**\n   * Create new CirclesCore instance to interact with Circles.\n   *\n   * @param {Web3} web3 - instance of Web3\n   * @param {Object} options - global core options\n   * @param {string} options.hubAddress - address of deployed Circles Hub contract\n   * @param {string} options.proxyFactoryAddress - address of deployed Gnosis ProxyFactory contract\n   * @param {string} options.safeMasterAddress - address of deployed Gnosis Safe master copy contract\n   * @param {string} options.relayServiceEndpoint - URL of the Relayer Server\n   */\n  constructor(web3, options) {\n    // Check web3 instance\n    if (!web3) {\n      throw new Error('Web3 instance missing');\n    }\n\n    /** @type {Web3} - instance of Web3 */\n    this.web3 = web3;\n\n    // Check options\n    /** @type {Object} - global core options */\n    this.options = checkOptions(options, {\n      hubAddress: {\n        type: web3.utils.isAddress,\n      },\n      proxyFactoryAddress: {\n        type: web3.utils.isAddress,\n      },\n      safeMasterAddress: {\n        type: web3.utils.isAddress,\n      },\n      relayServiceEndpoint: {\n        type: 'string',\n      },\n    });\n\n    // Create contracts once\n    /** @type {Object} - smart contract instances */\n    this.contracts = getContracts(web3, this.options);\n\n    // Create common utils for submodules\n    /** @type {Object} - utils module */\n    this.utils = createUtilsModule(web3, this.contracts, this.options);\n\n    // Create submodules and pass utils and options to them\n    /** @type {Object} - safe module */\n    this.safe = createSafeModule(web3, this.contracts, this.utils);\n  }\n}\n"],"names":["instance","Constructor","TypeError","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","module","DEFAULT_TYPE","validators","number","value","string","object","array","Array","isArray","checkOptions","options","fields","Error","Object","keys","reduce","acc","key","type","validatorFn","defaultValue","getContract","web3","abi","address","eth","Contract","getSafeContract","GnosisSafeContract","runtime","exports","undefined","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","CALL_OP","ZERO_ADDRESS","checkAccount","account","utils","isAddress","privateKey","isHexStrict","getOwners","safe","methods","encode","str","encodeURIComponent","parameterize","map","item","join","requestRPC","params","currentProvider","send","jsonrpc","id","Date","getTime","signTypedData","typedData","requestRelayer","endpoint","userOptions","path","version","data","request","headers","paramsStr","body","JSON","stringify","url","fetch","response","status","contentType","get","includes","json","estimateTransactionCosts","safeAddress","to","txData","gasToken","operation","hubAddress","proxyFactoryAddress","safeMasterAddress","relayServiceEndpoint","contracts","safeMaster","proxyFactory","ProxyFactoryContract","hub","HubContract","getContracts","globalOptions","executeSafeTx","refundReceiver","dataGas","safeTxGas","gasPrice","nonce","types","EIP712Domain","SafeTx","domain","verifyingContract","primaryType","message","baseGas","signatureBytes","sig","signature","r","toBN","s","v","toDecimal","signatures","createUtilsModule","prepareDeploy","saltNonce","owners","threshold","forceDeploy","addOwner","owner","addOwnerWithThreshold","encodeABI","removeOwner","ownerIndex","findIndex","prevOwner","createSafeModule"],"mappings":"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"}