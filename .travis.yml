language: node_js

addons:
  hosts:
    - relay.circles.local
    - api.circles.local

services:
  - docker

node_js:
  - '11'

env:
  - PYTHON_VERSION=2.7.15 PYENV_TAG=v1.2.13 CIRCLES_DOCKER=$HOME/CirclesUBI/circles-docker PYTHON_BUILD_CACHE_PATH=$HOME/.cache/pyenv

cache:
  directories:
    - $(pyenv root)
    - $HOME/.cache
    - $HOME/.npm
    - $HOME/docker
    - $PYTHON_BUILD_CACHE_PATH

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='reference=*circles*' --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

before_install:
  # disable travis postgres
  - sudo /etc/init.d/postgresql stop

  # get latest pyenv version
  - cd $(pyenv root)
  - git fetch --all --tags
  - git checkout tags/$PYENV_TAG
  - cd $HOME

  # install python
  - mkdir -p $PYTHON_BUILD_CACHE_PATH
  - pyenv install $PYTHON_VERSION -s
  - pyenv global $PYTHON_VERSION

  # load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

  # get circles-docker repository and copy configs
  - git clone https://github.com/CirclesUBI/circles-docker.git $CIRCLES_DOCKER
  - cd $CIRCLES_DOCKER
  - cp .env.example .env

  # container setup via docker-compose and migrate contracts
  - make build
  - make up
  - make migrate

  # copy core configs
  - cd $TRAVIS_BUILD_DIR
  - cp .env.example .env

install:
  - npm install

script:
  - npm run test
  - npm run build
